
SELECT 
DISTINCT
    DISTRICTS.ID AS DISTRICT_ID,
    DISTRICTS.NAME_EN AS DISTRICT_NAME, 
    BLOCKS.ID AS BLOCK_ID,
    BLOCKS.NAME_EN AS BLOCK_NAME,
    PHCS.ID AS PHC_ID,
    PHCS.NAME_EN AS PHC_NAME,
    SUB_CENTERS.ID::VARCHAR AS SUB_CENTER_ID,
    SUB_CENTERS.NAME_EN AS SUB_CENTER_NAME,
    ANGANWADIS.ID::VARCHAR AS ANGANWADI_ID,
    ANGANWADIS.NAME_EN AS ANGANWADI_NAME,
    HEALTH_WORKERS.ID AS HEALTH_WORKER_ID,
    HEALTH_WORKERS.NAME AS HEALTH_WORKER_NAME,
    HEALTH_WORKERS.DESIGNATION,
    SYNC_REPORTS.latest_date AS updated_sync_date,
    SYNC_REPORTS.entity_id,
    SYNC_REPORTS.entity_name,
    API_LOGS.id AS api_log_id,
    API_LOGS.log AS api_log,
    SYNC_REPORTS.flag,
	CASE 
	WHEN SYNC_REPORTS.flag= 1 THEN 'SYNC SUCCESS'
	WHEN SYNC_REPORTS.flag= 2 THEN 'SYNC FAILED'
	WHEN SYNC_REPORTS.flag= 3 THEN 'SYNC FAILED'
	ELSE 'UNKNOWN'
	END AS sync_result,
	API_LOGS.api_path,
	CASE 
	WHEN API_LOGS.api_path LIKE '/chip/api/v1/sync/create/%' THEN 'New record'
	WHEN API_LOGS.api_path LIKE '/chip/api/v1/sync/update/%' THEN 'updated record' 
	WHEN API_LOGS.api_path LIKE  '/chip/api/v1/sync/delete/%' THEN  'deleted record'
	ELSE 'UNKNOWN'
	END AS operation
FROM DISTRICTS
INNER JOIN BLOCKS ON BLOCKS.DISTRICT_ID = DISTRICTS.ID
INNER JOIN PHCS ON PHCS.BLOCK_ID = BLOCKS.ID
INNER JOIN SUB_CENTERS ON SUB_CENTERS.PHC_ID = PHCS.ID
INNER JOIN ANGANWADIS ON ANGANWADIS.SUB_CENTER_ID = SUB_CENTERS.ID			   
INNER JOIN HEALTH_WORKERS ON HEALTH_WORKERS.ANGANWADI_ID = ANGANWADIS.ID
inner JOIN (SELECT HEALTH_WORKER_ID,API_LOG_ID,SYNC_REPORTS.ENTITY_ID,ENTITY_NAME,FLAG,UPDATED_AT AS LATEST_DATE
				 FROM SYNC_REPORTS 
				 inner join (select entity_id,max(updated_at)as latest_date from sync_reports where sync_reports.deleted_at is null and sync_reports.status = 1 group by entity_id)latest_sync_report
				 on latest_sync_report.entity_id=sync_reports.entity_id and  latest_sync_report.latest_date=sync_reports.updated_at)SYNC_REPORTS
ON SYNC_REPORTS.HEALTH_WORKER_ID=HEALTH_WORKERS.ID
inner JOIN API_LOGS on SYNC_REPORTS.api_log_id = API_LOGS.id
WHERE HEALTH_WORKERS.DESIGNATION=1 
AND DISTRICTS.DELETED_AT IS NULL AND DISTRICTS.STATUS = 1
AND BLOCKS.DELETED_AT IS NULL AND BLOCKS.STATUS = 1
AND PHCS.DELETED_AT IS NULL AND PHCS.STATUS = 1
AND SUB_CENTERS.DELETED_AT IS NULL AND SUB_CENTERS.STATUS = 1
AND ANGANWADIS.DELETED_AT IS NULL AND ANGANWADIS.STATUS = 1
AND HEALTH_WORKERS.DELETED_AT IS NULL AND HEALTH_WORKERS.STATUS = 1
AND API_LOGS.DELETED_AT IS NULL AND API_LOGS.STATUS = 1
UNION
SELECT 
DISTINCT
    DISTRICTS.ID AS DISTRICT_ID,
    DISTRICTS.NAME_EN AS DISTRICT_NAME, 
    BLOCKS.ID AS BLOCK_ID,
    BLOCKS.NAME_EN AS BLOCK_NAME,
    PHCS.ID AS PHC_ID,
    PHCS.NAME_EN AS PHC_NAME,
    SUB_CENTERS.ID::VARCHAR AS SUB_CENTER_ID,
    SUB_CENTERS.NAME_EN AS SUB_CENTER_NAME,
    NULL AS ANGANWADI_ID,
    NULL AS ANGANWADI_NAME,
    HEALTH_WORKERS.ID AS HEALTH_WORKER_ID,
    HEALTH_WORKERS.NAME AS HEALTH_WORKER_NAME,
    HEALTH_WORKERS.DESIGNATION,
    SYNC_REPORTS.latest_date AS updated_sync_date,
    SYNC_REPORTS.entity_id,
    SYNC_REPORTS.entity_name,
    API_LOGS.id AS api_log_id,
    API_LOGS.log AS api_log,
    SYNC_REPORTS.flag,
	CASE 
	WHEN SYNC_REPORTS.flag= 1 THEN 'SYNC SUCCESS'
	WHEN SYNC_REPORTS.flag= 2 THEN 'SYNC FAILED'
	WHEN SYNC_REPORTS.flag= 3 THEN 'SYNC FAILED'
	ELSE 'UNKNOWN'
	END AS sync_result,
	API_LOGS.api_path,
	CASE 
	WHEN API_LOGS.api_path LIKE '/chip/api/v1/sync/create/%' THEN 'New record'
	WHEN API_LOGS.api_path LIKE '/chip/api/v1/sync/update/%' THEN 'updated record' 
	WHEN API_LOGS.api_path LIKE  '/chip/api/v1/sync/delete/%' THEN  'deleted record'
	ELSE 'UNKNOWN'
	END AS operation
    
FROM DISTRICTS
INNER JOIN BLOCKS ON BLOCKS.DISTRICT_ID = DISTRICTS.ID
INNER JOIN PHCS ON PHCS.BLOCK_ID = BLOCKS.ID
INNER JOIN SUB_CENTERS ON SUB_CENTERS.PHC_ID = PHCS.ID
INNER JOIN HEALTH_WORKERS ON HEALTH_WORKERS.SUB_CENTER_ID = SUB_CENTERS.ID
INNER JOIN (SELECT HEALTH_WORKER_ID,API_LOG_ID,SYNC_REPORTS.ENTITY_ID,ENTITY_NAME,FLAG,UPDATED_AT AS LATEST_DATE
				 FROM SYNC_REPORTS 
				 inner join (select entity_id,max(updated_at)as latest_date from sync_reports where sync_reports.deleted_at is null and sync_reports.status = 1 group by entity_id)latest_sync_report
				 on latest_sync_report.entity_id=sync_reports.entity_id and  latest_sync_report.latest_date=sync_reports.updated_at)SYNC_REPORTS
ON SYNC_REPORTS.HEALTH_WORKER_ID=HEALTH_WORKERS.ID
INNER JOIN API_LOGS on SYNC_REPORTS.api_log_id = API_LOGS.id			   
WHERE HEALTH_WORKERS.DESIGNATION = 2 
AND DISTRICTS.DELETED_AT IS NULL AND DISTRICTS.STATUS = 1
AND BLOCKS.DELETED_AT IS NULL AND BLOCKS.STATUS = 1
AND PHCS.DELETED_AT IS NULL AND PHCS.STATUS = 1
AND SUB_CENTERS.DELETED_AT IS NULL AND SUB_CENTERS.STATUS = 1
AND HEALTH_WORKERS.DELETED_AT IS NULL AND HEALTH_WORKERS.STATUS = 1
AND API_LOGS.DELETED_AT IS NULL AND API_LOGS.STATUS = 1
 
 
UNION 
SELECT 
DISTINCT
    DISTRICTS.ID AS DISTRICT_ID,
    DISTRICTS.NAME_EN AS DISTRICT_NAME, 
    BLOCKS.ID AS BLOCK_ID,
    BLOCKS.NAME_EN AS BLOCK_NAME,
    PHCS.ID AS PHC_ID,
    PHCS.NAME_EN AS PHC_NAME,
    NULL AS SUB_CENTER_ID,
    NULL AS SUB_CENTER_NAME,
    NULL AS ANGANWADI_ID,
    NULL AS ANGANWADI_NAME,
    HEALTH_WORKERS.ID AS HEALTH_WORKER_ID,
    HEALTH_WORKERS.NAME AS HEALTH_WORKER_NAME,
    HEALTH_WORKERS.DESIGNATION,
    SYNC_REPORTS.latest_date AS updated_sync_date,
    SYNC_REPORTS.entity_id,
    SYNC_REPORTS.entity_name,
    API_LOGS.id AS api_log_id,
    API_LOGS.log AS api_log,
    SYNC_REPORTS.flag,
	CASE 
	WHEN SYNC_REPORTS.flag= 1 THEN 'SYNC SUCCESS'
	WHEN SYNC_REPORTS.flag= 2 THEN 'SYNC FAILED'
	WHEN SYNC_REPORTS.flag= 3 THEN 'SYNC FAILED'
	ELSE 'UNKNOWN'
	END AS sync_result,
	API_LOGS.api_path,
	CASE 
	WHEN API_LOGS.api_path LIKE '/chip/api/v1/sync/create/%' THEN 'New record'
	WHEN API_LOGS.api_path LIKE '/chip/api/v1/sync/update/%' THEN 'updated record' 
	WHEN API_LOGS.api_path LIKE  '/chip/api/v1/sync/delete/%' THEN  'deleted record'
	ELSE 'UNKNOWN'
	END AS operation
FROM DISTRICTS
INNER JOIN BLOCKS ON BLOCKS.DISTRICT_ID = DISTRICTS.ID
INNER JOIN PHCS ON PHCS.BLOCK_ID = BLOCKS.ID
INNER JOIN HEALTH_WORKERS ON HEALTH_WORKERS.PHC_ID = PHCS.ID
INNER JOIN (SELECT HEALTH_WORKER_ID,API_LOG_ID,SYNC_REPORTS.ENTITY_ID,ENTITY_NAME,FLAG,UPDATED_AT AS LATEST_DATE
				 FROM SYNC_REPORTS 
				 inner join (select entity_id,max(updated_at)as latest_date from sync_reports where sync_reports.deleted_at is null and sync_reports.status = 1 group by entity_id)latest_sync_report
				 on latest_sync_report.entity_id=sync_reports.entity_id and  latest_sync_report.latest_date=sync_reports.updated_at)SYNC_REPORTS
ON SYNC_REPORTS.HEALTH_WORKER_ID=HEALTH_WORKERS.ID
INNER JOIN API_LOGS on SYNC_REPORTS.api_log_id = API_LOGS.id			   
WHERE HEALTH_WORKERS.DESIGNATION = 3
AND DISTRICTS.DELETED_AT IS NULL AND DISTRICTS.STATUS = 1
AND BLOCKS.DELETED_AT IS NULL AND BLOCKS.STATUS = 1
AND PHCS.DELETED_AT IS NULL AND PHCS.STATUS = 1
AND HEALTH_WORKERS.DELETED_AT IS NULL AND HEALTH_WORKERS.STATUS = 1
AND API_LOGS.DELETED_AT IS NULL AND API_LOGS.STATUS = 1

 
 
 
